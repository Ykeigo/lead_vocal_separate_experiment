name: CI
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
      - name: Cache Poetry
        id: poetry_cache_id
        uses: actions/cache@v2
        with:
          path: |
            .venv
          key: ${{ runner.os }}-poetry-dep-v3-${{ hashFiles('poetry.lock') }}
      - name: Install dependencies
        if: steps.poetry_cache_id.outputs.cache-hit != 'true'
        run: |
          poetry install
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          poetry run flake8 ./team_handson ./tests --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          poetry run flake8 ./team_handson ./tests --count --max-complexity=10 --max-line-length=127 --statistics
      - name: Lint with mypy
        run: |
          poetry run mypy ./team_handson ./tests
      - name: Lint with isort
        run: |
          poetry run isort ./team_handson ./tests --check-only
      - name: Lint with black
        run: |
          poetry run black ./team_handson ./tests
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
      - name: Cache Poetry
        id: poetry_cache_id
        uses: actions/cache@v2
        with:
          path: |
            .venv
          key: ${{ runner.os }}-poetry-dep-v3-${{ hashFiles('poetry.lock') }}
      - name: Install dependencies
        if: steps.poetry_cache_id.outputs.cache-hit != 'true'
        run: |
          poetry install
      - name: Test with pytest
        run: |
          poetry run pytest
